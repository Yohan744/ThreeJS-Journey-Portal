var Table = require("cli-table")
  , util = require("./lib/util");

module.exports = Spector;

function Spector(input) {
  if(!(this instanceof Spector)) return new Spector(input).toString();
  
  this.input = input;
  this.primitive = typeof input;
  this.type = util.typeOf(input);
  this.name = util.nameOf(input);
  this.args = util.argsOf(input);
}

Spector.prototype.toString = function() {
  var out = [];
  
  var headers = new Table;
  headers.push(
    { "Primitive": this.primitive }
  , { "Type": this.type }
  );
  if(this.name)
    headers.push(
      { "Function": this.name }
    , { "Arguments": this.args.join(", ") }
    );
  var buf = null
    , str = null;
  if(this.primitive === "string" || Buffer.isBuffer(this.input)) {
    buf = new Buffer(this.input);
    str = buf.toString("utf8");
    headers.push(
      { "Length": this.input.length }
    );
  }
  out.push(headers.toString())
  
  if(buf) {
    var content = new Table({ head: ["Char", "Byte", "Hex", "Dec", "UTF-8"] });
    for(var c = 0, b = 0; c < str.length; c++) {
      var part = new Buffer(str[c])
        , hex = part.toString("hex")
        , dec = parseInt(hex, 16)
      content.push([c, b, hex, dec, str[c]]);
      b += part.length;
    }
    out.push(content.toString());
  }
  
  return out.join("\n");
};